## File generated by the BNF Converter (bnfc 2.9.4.1).

# Makefile for building the parser and test program.

GHC        = ghc
HAPPY      = happy
HAPPY_OPTS = --array --info --ghc --coerce
ALEX       = alex
ALEX_OPTS  = --ghc

# List of goals not corresponding to file names.

.PHONY : all clean distclean

# Default goal.

all : TestHint

# Rules for building the parser.

AbsHint.hs LexHint.x ParHint.y PrintHint.hs TestHint.hs : hint.cf
	bnfc --haskell --functor hint.cf

%.hs : %.y
	${HAPPY} ${HAPPY_OPTS} $<

%.hs : %.x
	${ALEX} ${ALEX_OPTS} $<

TestHint : AbsHint.hs LexHint.hs ParHint.hs PrintHint.hs TestHint.hs
	${GHC} ${GHC_OPTS} $@

# Rules for cleaning generated files.

clean :
	-rm -f *.hi *.o *.log *.aux *.dvi

distclean : clean
	-rm -f AbsHint.hs AbsHint.hs.bak ComposOp.hs ComposOp.hs.bak DocHint.txt DocHint.txt.bak ErrM.hs ErrM.hs.bak LayoutHint.hs LayoutHint.hs.bak LexHint.x LexHint.x.bak ParHint.y ParHint.y.bak PrintHint.hs PrintHint.hs.bak SkelHint.hs SkelHint.hs.bak TestHint.hs TestHint.hs.bak XMLHint.hs XMLHint.hs.bak ASTHint.agda ASTHint.agda.bak ParserHint.agda ParserHint.agda.bak IOLib.agda IOLib.agda.bak Main.agda Main.agda.bak hint.dtd hint.dtd.bak TestHint LexHint.hs ParHint.hs ParHint.info ParDataHint.hs Makefile


# EOF
