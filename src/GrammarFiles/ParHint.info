-----------------------------------------------------------------------------
Info file generated by Happy Version 1.20.1.1 from ParHint.y
-----------------------------------------------------------------------------

state 41 contains 1 shift/reduce conflicts.
state 62 contains 1 shift/reduce conflicts.
state 111 contains 1 shift/reduce conflicts.

rule 45 is unused
rule 46 is unused

terminal '[' is unused
terminal ']' is unused

-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_pProgram_internal -> Program                (0)
	Ident -> L_Ident                                   (1)
	Integer -> L_integ                                 (2)
	String -> L_quoted                                 (3)
	Program -> ListTopDef                              (4)
	TopDef -> Type Ident '(' ListArg ')' Block         (5)
	ListTopDef -> TopDef                               (6)
	ListTopDef -> TopDef ListTopDef                    (7)
	Arg -> Type Ident                                  (8)
	ListArg ->                                         (9)
	ListArg -> Arg                                     (10)
	ListArg -> Arg ',' ListArg                         (11)
	Block -> '{' ListStmt '}'                          (12)
	ListStmt ->                                        (13)
	ListStmt -> Stmt ListStmt                          (14)
	Stmt -> ';'                                        (15)
	Stmt -> Block                                      (16)
	Stmt -> Type ListItem ';'                          (17)
	Stmt -> Ident '=' Expr ';'                         (18)
	Stmt -> Ident '++' ';'                             (19)
	Stmt -> Ident '--' ';'                             (20)
	Stmt -> 'return' Expr ';'                          (21)
	Stmt -> 'return' ';'                               (22)
	Stmt -> 'if' '(' Expr ')' Block                    (23)
	Stmt -> 'if' '(' Expr ')' Block 'else' Block       (24)
	Stmt -> 'while' '(' Expr ')' Block                 (25)
	Stmt -> 'for' '(' Ident ':=' Expr 'to' Expr ')' Block   (26)
	Stmt -> Expr ';'                                   (27)
	Stmt -> 'break' ';'                                (28)
	Stmt -> 'continue' ';'                             (29)
	Stmt -> 'print' '(' Expr ')'                       (30)
	Stmt -> 'printf' '(' Expr Expr Expr String ')'     (31)
	Item -> Ident                                      (32)
	Item -> Ident '=' Expr                             (33)
	ListItem -> Item                                   (34)
	ListItem -> Item ',' ListItem                      (35)
	Type -> 'int'                                      (36)
	Type -> 'string'                                   (37)
	Type -> 'boolean'                                  (38)
	Type -> 'void'                                     (39)
	Type -> 'tuple' '<' ListType '>'                   (40)
	Type -> Type '[]'                                  (41)
	ListType ->                                        (42)
	ListType -> Type                                   (43)
	ListType -> Type ',' ListType                      (44)
	Expr7 -> '<' ListExpr '>'                          (45)
	Expr7 -> '[' ListExpr ']'                          (46)
	Expr6 -> Ident                                     (47)
	Expr6 -> Integer                                   (48)
	Expr6 -> 'true'                                    (49)
	Expr6 -> 'false'                                   (50)
	Expr6 -> Ident '(' ListExpr ')'                    (51)
	Expr6 -> String                                    (52)
	Expr6 -> '(' Expr ')'                              (53)
	Expr5 -> '-' Expr6                                 (54)
	Expr5 -> '!' Expr6                                 (55)
	Expr5 -> Expr6                                     (56)
	Expr4 -> Expr4 MulOp Expr5                         (57)
	Expr4 -> Expr5                                     (58)
	Expr3 -> Expr3 AddOp Expr4                         (59)
	Expr3 -> Expr4                                     (60)
	Expr2 -> Expr2 RelOp Expr3                         (61)
	Expr2 -> Expr3                                     (62)
	Expr1 -> Expr2 '&&' Expr1                          (63)
	Expr1 -> Expr2                                     (64)
	Expr -> Expr1 '||' Expr                            (65)
	Expr -> Expr1                                      (66)
	ListExpr ->                                        (67)
	ListExpr -> Expr                                   (68)
	ListExpr -> Expr ',' ListExpr                      (69)
	AddOp -> '+'                                       (70)
	AddOp -> '-'                                       (71)
	MulOp -> '*'                                       (72)
	MulOp -> '/'                                       (73)
	MulOp -> '%'                                       (74)
	RelOp -> '<'                                       (75)
	RelOp -> '<='                                      (76)
	RelOp -> '>'                                       (77)
	RelOp -> '>='                                      (78)
	RelOp -> '=='                                      (79)
	RelOp -> '!='                                      (80)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	'!'            { PT _ (TS _ 1) }
	'!='           { PT _ (TS _ 2) }
	'%'            { PT _ (TS _ 3) }
	'&&'           { PT _ (TS _ 4) }
	'('            { PT _ (TS _ 5) }
	')'            { PT _ (TS _ 6) }
	'*'            { PT _ (TS _ 7) }
	'+'            { PT _ (TS _ 8) }
	'++'           { PT _ (TS _ 9) }
	','            { PT _ (TS _ 10) }
	'-'            { PT _ (TS _ 11) }
	'--'           { PT _ (TS _ 12) }
	'/'            { PT _ (TS _ 13) }
	':='           { PT _ (TS _ 14) }
	';'            { PT _ (TS _ 15) }
	'<'            { PT _ (TS _ 16) }
	'<='           { PT _ (TS _ 17) }
	'='            { PT _ (TS _ 18) }
	'=='           { PT _ (TS _ 19) }
	'>'            { PT _ (TS _ 20) }
	'>='           { PT _ (TS _ 21) }
	'['            { PT _ (TS _ 22) }
	'[]'           { PT _ (TS _ 23) }
	']'            { PT _ (TS _ 24) }
	'boolean'      { PT _ (TS _ 25) }
	'break'        { PT _ (TS _ 26) }
	'continue'     { PT _ (TS _ 27) }
	'else'         { PT _ (TS _ 28) }
	'false'        { PT _ (TS _ 29) }
	'for'          { PT _ (TS _ 30) }
	'if'           { PT _ (TS _ 31) }
	'int'          { PT _ (TS _ 32) }
	'print'        { PT _ (TS _ 33) }
	'printf'       { PT _ (TS _ 34) }
	'return'       { PT _ (TS _ 35) }
	'string'       { PT _ (TS _ 36) }
	'to'           { PT _ (TS _ 37) }
	'true'         { PT _ (TS _ 38) }
	'tuple'        { PT _ (TS _ 39) }
	'void'         { PT _ (TS _ 40) }
	'while'        { PT _ (TS _ 41) }
	'{'            { PT _ (TS _ 42) }
	'||'           { PT _ (TS _ 43) }
	'}'            { PT _ (TS _ 44) }
	L_Ident        { PT _ (TV _) }
	L_integ        { PT _ (TI _) }
	L_quoted       { PT _ (TL _) }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_pProgram_internal rule  0
	Ident           rule  1
	Integer         rule  2
	String          rule  3
	Program         rule  4
	TopDef          rule  5
	ListTopDef      rules 6, 7
	Arg             rule  8
	ListArg         rules 9, 10, 11
	Block           rule  12
	ListStmt        rules 13, 14
	Stmt            rules 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31
	Item            rules 32, 33
	ListItem        rules 34, 35
	Type            rules 36, 37, 38, 39, 40, 41
	ListType        rules 42, 43, 44
	Expr7           rules 45, 46
	Expr6           rules 47, 48, 49, 50, 51, 52, 53
	Expr5           rules 54, 55, 56
	Expr4           rules 57, 58
	Expr3           rules 59, 60
	Expr2           rules 61, 62
	Expr1           rules 63, 64
	Expr            rules 65, 66
	ListExpr        rules 67, 68, 69
	AddOp           rules 70, 71
	MulOp           rules 72, 73, 74
	RelOp           rules 75, 76, 77, 78, 79, 80

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0

	%start_pProgram_internal -> . Program               (rule 0)

	'boolean'      shift, and enter state 7
	'int'          shift, and enter state 8
	'string'       shift, and enter state 9
	'tuple'        shift, and enter state 10
	'void'         shift, and enter state 11

	Program        goto state 3
	TopDef         goto state 4
	ListTopDef     goto state 5
	Type           goto state 6

State 1

	Ident -> . L_Ident                                  (rule 1)

	L_Ident        shift, and enter state 2


State 2

	Ident -> L_Ident .                                  (rule 1)

	'!'            reduce using rule 1
	'!='           reduce using rule 1
	'%'            reduce using rule 1
	'&&'           reduce using rule 1
	'('            reduce using rule 1
	')'            reduce using rule 1
	'*'            reduce using rule 1
	'+'            reduce using rule 1
	'++'           reduce using rule 1
	','            reduce using rule 1
	'-'            reduce using rule 1
	'--'           reduce using rule 1
	'/'            reduce using rule 1
	':='           reduce using rule 1
	';'            reduce using rule 1
	'<'            reduce using rule 1
	'<='           reduce using rule 1
	'='            reduce using rule 1
	'=='           reduce using rule 1
	'>'            reduce using rule 1
	'>='           reduce using rule 1
	'false'        reduce using rule 1
	'to'           reduce using rule 1
	'true'         reduce using rule 1
	'||'           reduce using rule 1
	L_Ident        reduce using rule 1
	L_integ        reduce using rule 1
	L_quoted       reduce using rule 1


State 3

	%start_pProgram_internal -> Program .               (rule 0)

	%eof           accept


State 4

	ListTopDef -> TopDef .                              (rule 6)
	ListTopDef -> TopDef . ListTopDef                   (rule 7)

	'boolean'      shift, and enter state 7
	'int'          shift, and enter state 8
	'string'       shift, and enter state 9
	'tuple'        shift, and enter state 10
	'void'         shift, and enter state 11
	%eof           reduce using rule 6

	TopDef         goto state 4
	ListTopDef     goto state 15
	Type           goto state 6

State 5

	Program -> ListTopDef .                             (rule 4)

	%eof           reduce using rule 4


State 6

	TopDef -> Type . Ident '(' ListArg ')' Block        (rule 5)
	Type -> Type . '[]'                                 (rule 41)

	'[]'           shift, and enter state 14
	L_Ident        shift, and enter state 2

	Ident          goto state 13

State 7

	Type -> 'boolean' .                                 (rule 38)

	','            reduce using rule 38
	'>'            reduce using rule 38
	'[]'           reduce using rule 38
	L_Ident        reduce using rule 38


State 8

	Type -> 'int' .                                     (rule 36)

	','            reduce using rule 36
	'>'            reduce using rule 36
	'[]'           reduce using rule 36
	L_Ident        reduce using rule 36


State 9

	Type -> 'string' .                                  (rule 37)

	','            reduce using rule 37
	'>'            reduce using rule 37
	'[]'           reduce using rule 37
	L_Ident        reduce using rule 37


State 10

	Type -> 'tuple' . '<' ListType '>'                  (rule 40)

	'<'            shift, and enter state 12


State 11

	Type -> 'void' .                                    (rule 39)

	','            reduce using rule 39
	'>'            reduce using rule 39
	'[]'           reduce using rule 39
	L_Ident        reduce using rule 39


State 12

	Type -> 'tuple' '<' . ListType '>'                  (rule 40)

	'>'            reduce using rule 42
	'boolean'      shift, and enter state 7
	'int'          shift, and enter state 8
	'string'       shift, and enter state 9
	'tuple'        shift, and enter state 10
	'void'         shift, and enter state 11

	Type           goto state 17
	ListType       goto state 18

State 13

	TopDef -> Type Ident . '(' ListArg ')' Block        (rule 5)

	'('            shift, and enter state 16


State 14

	Type -> Type '[]' .                                 (rule 41)

	','            reduce using rule 41
	'>'            reduce using rule 41
	'[]'           reduce using rule 41
	L_Ident        reduce using rule 41


State 15

	ListTopDef -> TopDef ListTopDef .                   (rule 7)

	%eof           reduce using rule 7


State 16

	TopDef -> Type Ident '(' . ListArg ')' Block        (rule 5)

	')'            reduce using rule 9
	'boolean'      shift, and enter state 7
	'int'          shift, and enter state 8
	'string'       shift, and enter state 9
	'tuple'        shift, and enter state 10
	'void'         shift, and enter state 11

	Arg            goto state 21
	ListArg        goto state 22
	Type           goto state 23

State 17

	Type -> Type . '[]'                                 (rule 41)
	ListType -> Type .                                  (rule 43)
	ListType -> Type . ',' ListType                     (rule 44)

	','            shift, and enter state 20
	'>'            reduce using rule 43
	'[]'           shift, and enter state 14


State 18

	Type -> 'tuple' '<' ListType . '>'                  (rule 40)

	'>'            shift, and enter state 19


State 19

	Type -> 'tuple' '<' ListType '>' .                  (rule 40)

	','            reduce using rule 40
	'>'            reduce using rule 40
	'[]'           reduce using rule 40
	L_Ident        reduce using rule 40


State 20

	ListType -> Type ',' . ListType                     (rule 44)

	'>'            reduce using rule 42
	'boolean'      shift, and enter state 7
	'int'          shift, and enter state 8
	'string'       shift, and enter state 9
	'tuple'        shift, and enter state 10
	'void'         shift, and enter state 11

	Type           goto state 17
	ListType       goto state 27

State 21

	ListArg -> Arg .                                    (rule 10)
	ListArg -> Arg . ',' ListArg                        (rule 11)

	')'            reduce using rule 10
	','            shift, and enter state 26


State 22

	TopDef -> Type Ident '(' ListArg . ')' Block        (rule 5)

	')'            shift, and enter state 25


State 23

	Arg -> Type . Ident                                 (rule 8)
	Type -> Type . '[]'                                 (rule 41)

	'[]'           shift, and enter state 14
	L_Ident        shift, and enter state 2

	Ident          goto state 24

State 24

	Arg -> Type Ident .                                 (rule 8)

	')'            reduce using rule 8
	','            reduce using rule 8


State 25

	TopDef -> Type Ident '(' ListArg ')' . Block        (rule 5)

	'{'            shift, and enter state 30

	Block          goto state 29

State 26

	ListArg -> Arg ',' . ListArg                        (rule 11)

	')'            reduce using rule 9
	'boolean'      shift, and enter state 7
	'int'          shift, and enter state 8
	'string'       shift, and enter state 9
	'tuple'        shift, and enter state 10
	'void'         shift, and enter state 11

	Arg            goto state 21
	ListArg        goto state 28
	Type           goto state 23

State 27

	ListType -> Type ',' ListType .                     (rule 44)

	'>'            reduce using rule 44


State 28

	ListArg -> Arg ',' ListArg .                        (rule 11)

	')'            reduce using rule 11


State 29

	TopDef -> Type Ident '(' ListArg ')' Block .        (rule 5)

	'boolean'      reduce using rule 5
	'int'          reduce using rule 5
	'string'       reduce using rule 5
	'tuple'        reduce using rule 5
	'void'         reduce using rule 5
	%eof           reduce using rule 5


State 30

	Block -> '{' . ListStmt '}'                         (rule 12)

	'!'            shift, and enter state 45
	'('            shift, and enter state 46
	'-'            shift, and enter state 47
	';'            shift, and enter state 48
	'boolean'      shift, and enter state 7
	'break'        shift, and enter state 49
	'continue'     shift, and enter state 50
	'false'        shift, and enter state 51
	'for'          shift, and enter state 52
	'if'           shift, and enter state 53
	'int'          shift, and enter state 8
	'print'        shift, and enter state 54
	'printf'       shift, and enter state 55
	'return'       shift, and enter state 56
	'string'       shift, and enter state 9
	'true'         shift, and enter state 57
	'tuple'        shift, and enter state 10
	'void'         shift, and enter state 11
	'while'        shift, and enter state 58
	'{'            shift, and enter state 30
	'}'            reduce using rule 13
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 59
	L_quoted       shift, and enter state 60

	Ident          goto state 31
	Integer        goto state 32
	String         goto state 33
	Block          goto state 34
	ListStmt       goto state 35
	Stmt           goto state 36
	Type           goto state 37
	Expr6          goto state 38
	Expr5          goto state 39
	Expr4          goto state 40
	Expr3          goto state 41
	Expr2          goto state 42
	Expr1          goto state 43
	Expr           goto state 44

State 31

	Stmt -> Ident . '=' Expr ';'                        (rule 18)
	Stmt -> Ident . '++' ';'                            (rule 19)
	Stmt -> Ident . '--' ';'                            (rule 20)
	Expr6 -> Ident .                                    (rule 47)
	Expr6 -> Ident . '(' ListExpr ')'                   (rule 51)

	'!='           reduce using rule 47
	'%'            reduce using rule 47
	'&&'           reduce using rule 47
	'('            shift, and enter state 96
	'*'            reduce using rule 47
	'+'            reduce using rule 47
	'++'           shift, and enter state 97
	'-'            reduce using rule 47
	'--'           shift, and enter state 98
	'/'            reduce using rule 47
	';'            reduce using rule 47
	'<'            reduce using rule 47
	'<='           reduce using rule 47
	'='            shift, and enter state 99
	'=='           reduce using rule 47
	'>'            reduce using rule 47
	'>='           reduce using rule 47
	'||'           reduce using rule 47


State 32

	Expr6 -> Integer .                                  (rule 48)

	'!'            reduce using rule 48
	'!='           reduce using rule 48
	'%'            reduce using rule 48
	'&&'           reduce using rule 48
	'('            reduce using rule 48
	')'            reduce using rule 48
	'*'            reduce using rule 48
	'+'            reduce using rule 48
	','            reduce using rule 48
	'-'            reduce using rule 48
	'/'            reduce using rule 48
	';'            reduce using rule 48
	'<'            reduce using rule 48
	'<='           reduce using rule 48
	'=='           reduce using rule 48
	'>'            reduce using rule 48
	'>='           reduce using rule 48
	'false'        reduce using rule 48
	'to'           reduce using rule 48
	'true'         reduce using rule 48
	'||'           reduce using rule 48
	L_Ident        reduce using rule 48
	L_integ        reduce using rule 48
	L_quoted       reduce using rule 48


State 33

	Expr6 -> String .                                   (rule 52)

	'!'            reduce using rule 52
	'!='           reduce using rule 52
	'%'            reduce using rule 52
	'&&'           reduce using rule 52
	'('            reduce using rule 52
	')'            reduce using rule 52
	'*'            reduce using rule 52
	'+'            reduce using rule 52
	','            reduce using rule 52
	'-'            reduce using rule 52
	'/'            reduce using rule 52
	';'            reduce using rule 52
	'<'            reduce using rule 52
	'<='           reduce using rule 52
	'=='           reduce using rule 52
	'>'            reduce using rule 52
	'>='           reduce using rule 52
	'false'        reduce using rule 52
	'to'           reduce using rule 52
	'true'         reduce using rule 52
	'||'           reduce using rule 52
	L_Ident        reduce using rule 52
	L_integ        reduce using rule 52
	L_quoted       reduce using rule 52


State 34

	Stmt -> Block .                                     (rule 16)

	'!'            reduce using rule 16
	'('            reduce using rule 16
	'-'            reduce using rule 16
	';'            reduce using rule 16
	'boolean'      reduce using rule 16
	'break'        reduce using rule 16
	'continue'     reduce using rule 16
	'false'        reduce using rule 16
	'for'          reduce using rule 16
	'if'           reduce using rule 16
	'int'          reduce using rule 16
	'print'        reduce using rule 16
	'printf'       reduce using rule 16
	'return'       reduce using rule 16
	'string'       reduce using rule 16
	'true'         reduce using rule 16
	'tuple'        reduce using rule 16
	'void'         reduce using rule 16
	'while'        reduce using rule 16
	'{'            reduce using rule 16
	'}'            reduce using rule 16
	L_Ident        reduce using rule 16
	L_integ        reduce using rule 16
	L_quoted       reduce using rule 16


State 35

	Block -> '{' ListStmt . '}'                         (rule 12)

	'}'            shift, and enter state 95


State 36

	ListStmt -> Stmt . ListStmt                         (rule 14)

	'!'            shift, and enter state 45
	'('            shift, and enter state 46
	'-'            shift, and enter state 47
	';'            shift, and enter state 48
	'boolean'      shift, and enter state 7
	'break'        shift, and enter state 49
	'continue'     shift, and enter state 50
	'false'        shift, and enter state 51
	'for'          shift, and enter state 52
	'if'           shift, and enter state 53
	'int'          shift, and enter state 8
	'print'        shift, and enter state 54
	'printf'       shift, and enter state 55
	'return'       shift, and enter state 56
	'string'       shift, and enter state 9
	'true'         shift, and enter state 57
	'tuple'        shift, and enter state 10
	'void'         shift, and enter state 11
	'while'        shift, and enter state 58
	'{'            shift, and enter state 30
	'}'            reduce using rule 13
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 59
	L_quoted       shift, and enter state 60

	Ident          goto state 31
	Integer        goto state 32
	String         goto state 33
	Block          goto state 34
	ListStmt       goto state 94
	Stmt           goto state 36
	Type           goto state 37
	Expr6          goto state 38
	Expr5          goto state 39
	Expr4          goto state 40
	Expr3          goto state 41
	Expr2          goto state 42
	Expr1          goto state 43
	Expr           goto state 44

State 37

	Stmt -> Type . ListItem ';'                         (rule 17)
	Type -> Type . '[]'                                 (rule 41)

	'[]'           shift, and enter state 14
	L_Ident        shift, and enter state 2

	Ident          goto state 91
	Item           goto state 92
	ListItem       goto state 93

State 38

	Expr5 -> Expr6 .                                    (rule 56)

	'!'            reduce using rule 56
	'!='           reduce using rule 56
	'%'            reduce using rule 56
	'&&'           reduce using rule 56
	'('            reduce using rule 56
	')'            reduce using rule 56
	'*'            reduce using rule 56
	'+'            reduce using rule 56
	','            reduce using rule 56
	'-'            reduce using rule 56
	'/'            reduce using rule 56
	';'            reduce using rule 56
	'<'            reduce using rule 56
	'<='           reduce using rule 56
	'=='           reduce using rule 56
	'>'            reduce using rule 56
	'>='           reduce using rule 56
	'false'        reduce using rule 56
	'to'           reduce using rule 56
	'true'         reduce using rule 56
	'||'           reduce using rule 56
	L_Ident        reduce using rule 56
	L_integ        reduce using rule 56
	L_quoted       reduce using rule 56


State 39

	Expr4 -> Expr5 .                                    (rule 58)

	'!'            reduce using rule 58
	'!='           reduce using rule 58
	'%'            reduce using rule 58
	'&&'           reduce using rule 58
	'('            reduce using rule 58
	')'            reduce using rule 58
	'*'            reduce using rule 58
	'+'            reduce using rule 58
	','            reduce using rule 58
	'-'            reduce using rule 58
	'/'            reduce using rule 58
	';'            reduce using rule 58
	'<'            reduce using rule 58
	'<='           reduce using rule 58
	'=='           reduce using rule 58
	'>'            reduce using rule 58
	'>='           reduce using rule 58
	'false'        reduce using rule 58
	'to'           reduce using rule 58
	'true'         reduce using rule 58
	'||'           reduce using rule 58
	L_Ident        reduce using rule 58
	L_integ        reduce using rule 58
	L_quoted       reduce using rule 58


State 40

	Expr4 -> Expr4 . MulOp Expr5                        (rule 57)
	Expr3 -> Expr4 .                                    (rule 60)

	'!'            reduce using rule 60
	'!='           reduce using rule 60
	'%'            shift, and enter state 88
	'&&'           reduce using rule 60
	'('            reduce using rule 60
	')'            reduce using rule 60
	'*'            shift, and enter state 89
	'+'            reduce using rule 60
	','            reduce using rule 60
	'-'            reduce using rule 60
	'/'            shift, and enter state 90
	';'            reduce using rule 60
	'<'            reduce using rule 60
	'<='           reduce using rule 60
	'=='           reduce using rule 60
	'>'            reduce using rule 60
	'>='           reduce using rule 60
	'false'        reduce using rule 60
	'to'           reduce using rule 60
	'true'         reduce using rule 60
	'||'           reduce using rule 60
	L_Ident        reduce using rule 60
	L_integ        reduce using rule 60
	L_quoted       reduce using rule 60

	MulOp          goto state 87

State 41

	Expr3 -> Expr3 . AddOp Expr4                        (rule 59)
	Expr2 -> Expr3 .                                    (rule 62)

	'!'            reduce using rule 62
	'!='           reduce using rule 62
	'&&'           reduce using rule 62
	'('            reduce using rule 62
	')'            reduce using rule 62
	'+'            shift, and enter state 85
	','            reduce using rule 62
	'-'            shift, and enter state 86
			(reduce using rule 62)

	';'            reduce using rule 62
	'<'            reduce using rule 62
	'<='           reduce using rule 62
	'=='           reduce using rule 62
	'>'            reduce using rule 62
	'>='           reduce using rule 62
	'false'        reduce using rule 62
	'to'           reduce using rule 62
	'true'         reduce using rule 62
	'||'           reduce using rule 62
	L_Ident        reduce using rule 62
	L_integ        reduce using rule 62
	L_quoted       reduce using rule 62

	AddOp          goto state 84

State 42

	Expr2 -> Expr2 . RelOp Expr3                        (rule 61)
	Expr1 -> Expr2 . '&&' Expr1                         (rule 63)
	Expr1 -> Expr2 .                                    (rule 64)

	'!'            reduce using rule 64
	'!='           shift, and enter state 77
	'&&'           shift, and enter state 78
	'('            reduce using rule 64
	')'            reduce using rule 64
	','            reduce using rule 64
	'-'            reduce using rule 64
	';'            reduce using rule 64
	'<'            shift, and enter state 79
	'<='           shift, and enter state 80
	'=='           shift, and enter state 81
	'>'            shift, and enter state 82
	'>='           shift, and enter state 83
	'false'        reduce using rule 64
	'to'           reduce using rule 64
	'true'         reduce using rule 64
	'||'           reduce using rule 64
	L_Ident        reduce using rule 64
	L_integ        reduce using rule 64
	L_quoted       reduce using rule 64

	RelOp          goto state 76

State 43

	Expr -> Expr1 . '||' Expr                           (rule 65)
	Expr -> Expr1 .                                     (rule 66)

	'!'            reduce using rule 66
	'('            reduce using rule 66
	')'            reduce using rule 66
	','            reduce using rule 66
	'-'            reduce using rule 66
	';'            reduce using rule 66
	'false'        reduce using rule 66
	'to'           reduce using rule 66
	'true'         reduce using rule 66
	'||'           shift, and enter state 75
	L_Ident        reduce using rule 66
	L_integ        reduce using rule 66
	L_quoted       reduce using rule 66


State 44

	Stmt -> Expr . ';'                                  (rule 27)

	';'            shift, and enter state 74


State 45

	Expr5 -> '!' . Expr6                                (rule 55)

	'('            shift, and enter state 46
	'false'        shift, and enter state 51
	'true'         shift, and enter state 57
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 59
	L_quoted       shift, and enter state 60

	Ident          goto state 62
	Integer        goto state 32
	String         goto state 33
	Expr6          goto state 73

State 46

	Expr6 -> '(' . Expr ')'                             (rule 53)

	'!'            shift, and enter state 45
	'('            shift, and enter state 46
	'-'            shift, and enter state 47
	'false'        shift, and enter state 51
	'true'         shift, and enter state 57
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 59
	L_quoted       shift, and enter state 60

	Ident          goto state 62
	Integer        goto state 32
	String         goto state 33
	Expr6          goto state 38
	Expr5          goto state 39
	Expr4          goto state 40
	Expr3          goto state 41
	Expr2          goto state 42
	Expr1          goto state 43
	Expr           goto state 72

State 47

	Expr5 -> '-' . Expr6                                (rule 54)

	'('            shift, and enter state 46
	'false'        shift, and enter state 51
	'true'         shift, and enter state 57
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 59
	L_quoted       shift, and enter state 60

	Ident          goto state 62
	Integer        goto state 32
	String         goto state 33
	Expr6          goto state 71

State 48

	Stmt -> ';' .                                       (rule 15)

	'!'            reduce using rule 15
	'('            reduce using rule 15
	'-'            reduce using rule 15
	';'            reduce using rule 15
	'boolean'      reduce using rule 15
	'break'        reduce using rule 15
	'continue'     reduce using rule 15
	'false'        reduce using rule 15
	'for'          reduce using rule 15
	'if'           reduce using rule 15
	'int'          reduce using rule 15
	'print'        reduce using rule 15
	'printf'       reduce using rule 15
	'return'       reduce using rule 15
	'string'       reduce using rule 15
	'true'         reduce using rule 15
	'tuple'        reduce using rule 15
	'void'         reduce using rule 15
	'while'        reduce using rule 15
	'{'            reduce using rule 15
	'}'            reduce using rule 15
	L_Ident        reduce using rule 15
	L_integ        reduce using rule 15
	L_quoted       reduce using rule 15


State 49

	Stmt -> 'break' . ';'                               (rule 28)

	';'            shift, and enter state 70


State 50

	Stmt -> 'continue' . ';'                            (rule 29)

	';'            shift, and enter state 69


State 51

	Expr6 -> 'false' .                                  (rule 50)

	'!'            reduce using rule 50
	'!='           reduce using rule 50
	'%'            reduce using rule 50
	'&&'           reduce using rule 50
	'('            reduce using rule 50
	')'            reduce using rule 50
	'*'            reduce using rule 50
	'+'            reduce using rule 50
	','            reduce using rule 50
	'-'            reduce using rule 50
	'/'            reduce using rule 50
	';'            reduce using rule 50
	'<'            reduce using rule 50
	'<='           reduce using rule 50
	'=='           reduce using rule 50
	'>'            reduce using rule 50
	'>='           reduce using rule 50
	'false'        reduce using rule 50
	'to'           reduce using rule 50
	'true'         reduce using rule 50
	'||'           reduce using rule 50
	L_Ident        reduce using rule 50
	L_integ        reduce using rule 50
	L_quoted       reduce using rule 50


State 52

	Stmt -> 'for' . '(' Ident ':=' Expr 'to' Expr ')' Block    (rule 26)

	'('            shift, and enter state 68


State 53

	Stmt -> 'if' . '(' Expr ')' Block                   (rule 23)
	Stmt -> 'if' . '(' Expr ')' Block 'else' Block      (rule 24)

	'('            shift, and enter state 67


State 54

	Stmt -> 'print' . '(' Expr ')'                      (rule 30)

	'('            shift, and enter state 66


State 55

	Stmt -> 'printf' . '(' Expr Expr Expr String ')'    (rule 31)

	'('            shift, and enter state 65


State 56

	Stmt -> 'return' . Expr ';'                         (rule 21)
	Stmt -> 'return' . ';'                              (rule 22)

	'!'            shift, and enter state 45
	'('            shift, and enter state 46
	'-'            shift, and enter state 47
	';'            shift, and enter state 64
	'false'        shift, and enter state 51
	'true'         shift, and enter state 57
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 59
	L_quoted       shift, and enter state 60

	Ident          goto state 62
	Integer        goto state 32
	String         goto state 33
	Expr6          goto state 38
	Expr5          goto state 39
	Expr4          goto state 40
	Expr3          goto state 41
	Expr2          goto state 42
	Expr1          goto state 43
	Expr           goto state 63

State 57

	Expr6 -> 'true' .                                   (rule 49)

	'!'            reduce using rule 49
	'!='           reduce using rule 49
	'%'            reduce using rule 49
	'&&'           reduce using rule 49
	'('            reduce using rule 49
	')'            reduce using rule 49
	'*'            reduce using rule 49
	'+'            reduce using rule 49
	','            reduce using rule 49
	'-'            reduce using rule 49
	'/'            reduce using rule 49
	';'            reduce using rule 49
	'<'            reduce using rule 49
	'<='           reduce using rule 49
	'=='           reduce using rule 49
	'>'            reduce using rule 49
	'>='           reduce using rule 49
	'false'        reduce using rule 49
	'to'           reduce using rule 49
	'true'         reduce using rule 49
	'||'           reduce using rule 49
	L_Ident        reduce using rule 49
	L_integ        reduce using rule 49
	L_quoted       reduce using rule 49


State 58

	Stmt -> 'while' . '(' Expr ')' Block                (rule 25)

	'('            shift, and enter state 61


State 59

	Integer -> L_integ .                                (rule 2)

	'!'            reduce using rule 2
	'!='           reduce using rule 2
	'%'            reduce using rule 2
	'&&'           reduce using rule 2
	'('            reduce using rule 2
	')'            reduce using rule 2
	'*'            reduce using rule 2
	'+'            reduce using rule 2
	','            reduce using rule 2
	'-'            reduce using rule 2
	'/'            reduce using rule 2
	';'            reduce using rule 2
	'<'            reduce using rule 2
	'<='           reduce using rule 2
	'=='           reduce using rule 2
	'>'            reduce using rule 2
	'>='           reduce using rule 2
	'false'        reduce using rule 2
	'to'           reduce using rule 2
	'true'         reduce using rule 2
	'||'           reduce using rule 2
	L_Ident        reduce using rule 2
	L_integ        reduce using rule 2
	L_quoted       reduce using rule 2


State 60

	String -> L_quoted .                                (rule 3)

	'!'            reduce using rule 3
	'!='           reduce using rule 3
	'%'            reduce using rule 3
	'&&'           reduce using rule 3
	'('            reduce using rule 3
	')'            reduce using rule 3
	'*'            reduce using rule 3
	'+'            reduce using rule 3
	','            reduce using rule 3
	'-'            reduce using rule 3
	'/'            reduce using rule 3
	';'            reduce using rule 3
	'<'            reduce using rule 3
	'<='           reduce using rule 3
	'=='           reduce using rule 3
	'>'            reduce using rule 3
	'>='           reduce using rule 3
	'false'        reduce using rule 3
	'to'           reduce using rule 3
	'true'         reduce using rule 3
	'||'           reduce using rule 3
	L_Ident        reduce using rule 3
	L_integ        reduce using rule 3
	L_quoted       reduce using rule 3


State 61

	Stmt -> 'while' '(' . Expr ')' Block                (rule 25)

	'!'            shift, and enter state 45
	'('            shift, and enter state 46
	'-'            shift, and enter state 47
	'false'        shift, and enter state 51
	'true'         shift, and enter state 57
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 59
	L_quoted       shift, and enter state 60

	Ident          goto state 62
	Integer        goto state 32
	String         goto state 33
	Expr6          goto state 38
	Expr5          goto state 39
	Expr4          goto state 40
	Expr3          goto state 41
	Expr2          goto state 42
	Expr1          goto state 43
	Expr           goto state 119

State 62

	Expr6 -> Ident .                                    (rule 47)
	Expr6 -> Ident . '(' ListExpr ')'                   (rule 51)

	'!'            reduce using rule 47
	'!='           reduce using rule 47
	'%'            reduce using rule 47
	'&&'           reduce using rule 47
	'('            shift, and enter state 96
			(reduce using rule 47)

	')'            reduce using rule 47
	'*'            reduce using rule 47
	'+'            reduce using rule 47
	','            reduce using rule 47
	'-'            reduce using rule 47
	'/'            reduce using rule 47
	';'            reduce using rule 47
	'<'            reduce using rule 47
	'<='           reduce using rule 47
	'=='           reduce using rule 47
	'>'            reduce using rule 47
	'>='           reduce using rule 47
	'false'        reduce using rule 47
	'to'           reduce using rule 47
	'true'         reduce using rule 47
	'||'           reduce using rule 47
	L_Ident        reduce using rule 47
	L_integ        reduce using rule 47
	L_quoted       reduce using rule 47


State 63

	Stmt -> 'return' Expr . ';'                         (rule 21)

	';'            shift, and enter state 118


State 64

	Stmt -> 'return' ';' .                              (rule 22)

	'!'            reduce using rule 22
	'('            reduce using rule 22
	'-'            reduce using rule 22
	';'            reduce using rule 22
	'boolean'      reduce using rule 22
	'break'        reduce using rule 22
	'continue'     reduce using rule 22
	'false'        reduce using rule 22
	'for'          reduce using rule 22
	'if'           reduce using rule 22
	'int'          reduce using rule 22
	'print'        reduce using rule 22
	'printf'       reduce using rule 22
	'return'       reduce using rule 22
	'string'       reduce using rule 22
	'true'         reduce using rule 22
	'tuple'        reduce using rule 22
	'void'         reduce using rule 22
	'while'        reduce using rule 22
	'{'            reduce using rule 22
	'}'            reduce using rule 22
	L_Ident        reduce using rule 22
	L_integ        reduce using rule 22
	L_quoted       reduce using rule 22


State 65

	Stmt -> 'printf' '(' . Expr Expr Expr String ')'    (rule 31)

	'!'            shift, and enter state 45
	'('            shift, and enter state 46
	'-'            shift, and enter state 47
	'false'        shift, and enter state 51
	'true'         shift, and enter state 57
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 59
	L_quoted       shift, and enter state 60

	Ident          goto state 62
	Integer        goto state 32
	String         goto state 33
	Expr6          goto state 38
	Expr5          goto state 39
	Expr4          goto state 40
	Expr3          goto state 41
	Expr2          goto state 42
	Expr1          goto state 43
	Expr           goto state 117

State 66

	Stmt -> 'print' '(' . Expr ')'                      (rule 30)

	'!'            shift, and enter state 45
	'('            shift, and enter state 46
	'-'            shift, and enter state 47
	'false'        shift, and enter state 51
	'true'         shift, and enter state 57
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 59
	L_quoted       shift, and enter state 60

	Ident          goto state 62
	Integer        goto state 32
	String         goto state 33
	Expr6          goto state 38
	Expr5          goto state 39
	Expr4          goto state 40
	Expr3          goto state 41
	Expr2          goto state 42
	Expr1          goto state 43
	Expr           goto state 116

State 67

	Stmt -> 'if' '(' . Expr ')' Block                   (rule 23)
	Stmt -> 'if' '(' . Expr ')' Block 'else' Block      (rule 24)

	'!'            shift, and enter state 45
	'('            shift, and enter state 46
	'-'            shift, and enter state 47
	'false'        shift, and enter state 51
	'true'         shift, and enter state 57
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 59
	L_quoted       shift, and enter state 60

	Ident          goto state 62
	Integer        goto state 32
	String         goto state 33
	Expr6          goto state 38
	Expr5          goto state 39
	Expr4          goto state 40
	Expr3          goto state 41
	Expr2          goto state 42
	Expr1          goto state 43
	Expr           goto state 115

State 68

	Stmt -> 'for' '(' . Ident ':=' Expr 'to' Expr ')' Block    (rule 26)

	L_Ident        shift, and enter state 2

	Ident          goto state 114

State 69

	Stmt -> 'continue' ';' .                            (rule 29)

	'!'            reduce using rule 29
	'('            reduce using rule 29
	'-'            reduce using rule 29
	';'            reduce using rule 29
	'boolean'      reduce using rule 29
	'break'        reduce using rule 29
	'continue'     reduce using rule 29
	'false'        reduce using rule 29
	'for'          reduce using rule 29
	'if'           reduce using rule 29
	'int'          reduce using rule 29
	'print'        reduce using rule 29
	'printf'       reduce using rule 29
	'return'       reduce using rule 29
	'string'       reduce using rule 29
	'true'         reduce using rule 29
	'tuple'        reduce using rule 29
	'void'         reduce using rule 29
	'while'        reduce using rule 29
	'{'            reduce using rule 29
	'}'            reduce using rule 29
	L_Ident        reduce using rule 29
	L_integ        reduce using rule 29
	L_quoted       reduce using rule 29


State 70

	Stmt -> 'break' ';' .                               (rule 28)

	'!'            reduce using rule 28
	'('            reduce using rule 28
	'-'            reduce using rule 28
	';'            reduce using rule 28
	'boolean'      reduce using rule 28
	'break'        reduce using rule 28
	'continue'     reduce using rule 28
	'false'        reduce using rule 28
	'for'          reduce using rule 28
	'if'           reduce using rule 28
	'int'          reduce using rule 28
	'print'        reduce using rule 28
	'printf'       reduce using rule 28
	'return'       reduce using rule 28
	'string'       reduce using rule 28
	'true'         reduce using rule 28
	'tuple'        reduce using rule 28
	'void'         reduce using rule 28
	'while'        reduce using rule 28
	'{'            reduce using rule 28
	'}'            reduce using rule 28
	L_Ident        reduce using rule 28
	L_integ        reduce using rule 28
	L_quoted       reduce using rule 28


State 71

	Expr5 -> '-' Expr6 .                                (rule 54)

	'!'            reduce using rule 54
	'!='           reduce using rule 54
	'%'            reduce using rule 54
	'&&'           reduce using rule 54
	'('            reduce using rule 54
	')'            reduce using rule 54
	'*'            reduce using rule 54
	'+'            reduce using rule 54
	','            reduce using rule 54
	'-'            reduce using rule 54
	'/'            reduce using rule 54
	';'            reduce using rule 54
	'<'            reduce using rule 54
	'<='           reduce using rule 54
	'=='           reduce using rule 54
	'>'            reduce using rule 54
	'>='           reduce using rule 54
	'false'        reduce using rule 54
	'to'           reduce using rule 54
	'true'         reduce using rule 54
	'||'           reduce using rule 54
	L_Ident        reduce using rule 54
	L_integ        reduce using rule 54
	L_quoted       reduce using rule 54


State 72

	Expr6 -> '(' Expr . ')'                             (rule 53)

	')'            shift, and enter state 113


State 73

	Expr5 -> '!' Expr6 .                                (rule 55)

	'!'            reduce using rule 55
	'!='           reduce using rule 55
	'%'            reduce using rule 55
	'&&'           reduce using rule 55
	'('            reduce using rule 55
	')'            reduce using rule 55
	'*'            reduce using rule 55
	'+'            reduce using rule 55
	','            reduce using rule 55
	'-'            reduce using rule 55
	'/'            reduce using rule 55
	';'            reduce using rule 55
	'<'            reduce using rule 55
	'<='           reduce using rule 55
	'=='           reduce using rule 55
	'>'            reduce using rule 55
	'>='           reduce using rule 55
	'false'        reduce using rule 55
	'to'           reduce using rule 55
	'true'         reduce using rule 55
	'||'           reduce using rule 55
	L_Ident        reduce using rule 55
	L_integ        reduce using rule 55
	L_quoted       reduce using rule 55


State 74

	Stmt -> Expr ';' .                                  (rule 27)

	'!'            reduce using rule 27
	'('            reduce using rule 27
	'-'            reduce using rule 27
	';'            reduce using rule 27
	'boolean'      reduce using rule 27
	'break'        reduce using rule 27
	'continue'     reduce using rule 27
	'false'        reduce using rule 27
	'for'          reduce using rule 27
	'if'           reduce using rule 27
	'int'          reduce using rule 27
	'print'        reduce using rule 27
	'printf'       reduce using rule 27
	'return'       reduce using rule 27
	'string'       reduce using rule 27
	'true'         reduce using rule 27
	'tuple'        reduce using rule 27
	'void'         reduce using rule 27
	'while'        reduce using rule 27
	'{'            reduce using rule 27
	'}'            reduce using rule 27
	L_Ident        reduce using rule 27
	L_integ        reduce using rule 27
	L_quoted       reduce using rule 27


State 75

	Expr -> Expr1 '||' . Expr                           (rule 65)

	'!'            shift, and enter state 45
	'('            shift, and enter state 46
	'-'            shift, and enter state 47
	'false'        shift, and enter state 51
	'true'         shift, and enter state 57
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 59
	L_quoted       shift, and enter state 60

	Ident          goto state 62
	Integer        goto state 32
	String         goto state 33
	Expr6          goto state 38
	Expr5          goto state 39
	Expr4          goto state 40
	Expr3          goto state 41
	Expr2          goto state 42
	Expr1          goto state 43
	Expr           goto state 112

State 76

	Expr2 -> Expr2 RelOp . Expr3                        (rule 61)

	'!'            shift, and enter state 45
	'('            shift, and enter state 46
	'-'            shift, and enter state 47
	'false'        shift, and enter state 51
	'true'         shift, and enter state 57
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 59
	L_quoted       shift, and enter state 60

	Ident          goto state 62
	Integer        goto state 32
	String         goto state 33
	Expr6          goto state 38
	Expr5          goto state 39
	Expr4          goto state 40
	Expr3          goto state 111

State 77

	RelOp -> '!=' .                                     (rule 80)

	'!'            reduce using rule 80
	'('            reduce using rule 80
	'-'            reduce using rule 80
	'false'        reduce using rule 80
	'true'         reduce using rule 80
	L_Ident        reduce using rule 80
	L_integ        reduce using rule 80
	L_quoted       reduce using rule 80


State 78

	Expr1 -> Expr2 '&&' . Expr1                         (rule 63)

	'!'            shift, and enter state 45
	'('            shift, and enter state 46
	'-'            shift, and enter state 47
	'false'        shift, and enter state 51
	'true'         shift, and enter state 57
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 59
	L_quoted       shift, and enter state 60

	Ident          goto state 62
	Integer        goto state 32
	String         goto state 33
	Expr6          goto state 38
	Expr5          goto state 39
	Expr4          goto state 40
	Expr3          goto state 41
	Expr2          goto state 42
	Expr1          goto state 110

State 79

	RelOp -> '<' .                                      (rule 75)

	'!'            reduce using rule 75
	'('            reduce using rule 75
	'-'            reduce using rule 75
	'false'        reduce using rule 75
	'true'         reduce using rule 75
	L_Ident        reduce using rule 75
	L_integ        reduce using rule 75
	L_quoted       reduce using rule 75


State 80

	RelOp -> '<=' .                                     (rule 76)

	'!'            reduce using rule 76
	'('            reduce using rule 76
	'-'            reduce using rule 76
	'false'        reduce using rule 76
	'true'         reduce using rule 76
	L_Ident        reduce using rule 76
	L_integ        reduce using rule 76
	L_quoted       reduce using rule 76


State 81

	RelOp -> '==' .                                     (rule 79)

	'!'            reduce using rule 79
	'('            reduce using rule 79
	'-'            reduce using rule 79
	'false'        reduce using rule 79
	'true'         reduce using rule 79
	L_Ident        reduce using rule 79
	L_integ        reduce using rule 79
	L_quoted       reduce using rule 79


State 82

	RelOp -> '>' .                                      (rule 77)

	'!'            reduce using rule 77
	'('            reduce using rule 77
	'-'            reduce using rule 77
	'false'        reduce using rule 77
	'true'         reduce using rule 77
	L_Ident        reduce using rule 77
	L_integ        reduce using rule 77
	L_quoted       reduce using rule 77


State 83

	RelOp -> '>=' .                                     (rule 78)

	'!'            reduce using rule 78
	'('            reduce using rule 78
	'-'            reduce using rule 78
	'false'        reduce using rule 78
	'true'         reduce using rule 78
	L_Ident        reduce using rule 78
	L_integ        reduce using rule 78
	L_quoted       reduce using rule 78


State 84

	Expr3 -> Expr3 AddOp . Expr4                        (rule 59)

	'!'            shift, and enter state 45
	'('            shift, and enter state 46
	'-'            shift, and enter state 47
	'false'        shift, and enter state 51
	'true'         shift, and enter state 57
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 59
	L_quoted       shift, and enter state 60

	Ident          goto state 62
	Integer        goto state 32
	String         goto state 33
	Expr6          goto state 38
	Expr5          goto state 39
	Expr4          goto state 109

State 85

	AddOp -> '+' .                                      (rule 70)

	'!'            reduce using rule 70
	'('            reduce using rule 70
	'-'            reduce using rule 70
	'false'        reduce using rule 70
	'true'         reduce using rule 70
	L_Ident        reduce using rule 70
	L_integ        reduce using rule 70
	L_quoted       reduce using rule 70


State 86

	AddOp -> '-' .                                      (rule 71)

	'!'            reduce using rule 71
	'('            reduce using rule 71
	'-'            reduce using rule 71
	'false'        reduce using rule 71
	'true'         reduce using rule 71
	L_Ident        reduce using rule 71
	L_integ        reduce using rule 71
	L_quoted       reduce using rule 71


State 87

	Expr4 -> Expr4 MulOp . Expr5                        (rule 57)

	'!'            shift, and enter state 45
	'('            shift, and enter state 46
	'-'            shift, and enter state 47
	'false'        shift, and enter state 51
	'true'         shift, and enter state 57
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 59
	L_quoted       shift, and enter state 60

	Ident          goto state 62
	Integer        goto state 32
	String         goto state 33
	Expr6          goto state 38
	Expr5          goto state 108

State 88

	MulOp -> '%' .                                      (rule 74)

	'!'            reduce using rule 74
	'('            reduce using rule 74
	'-'            reduce using rule 74
	'false'        reduce using rule 74
	'true'         reduce using rule 74
	L_Ident        reduce using rule 74
	L_integ        reduce using rule 74
	L_quoted       reduce using rule 74


State 89

	MulOp -> '*' .                                      (rule 72)

	'!'            reduce using rule 72
	'('            reduce using rule 72
	'-'            reduce using rule 72
	'false'        reduce using rule 72
	'true'         reduce using rule 72
	L_Ident        reduce using rule 72
	L_integ        reduce using rule 72
	L_quoted       reduce using rule 72


State 90

	MulOp -> '/' .                                      (rule 73)

	'!'            reduce using rule 73
	'('            reduce using rule 73
	'-'            reduce using rule 73
	'false'        reduce using rule 73
	'true'         reduce using rule 73
	L_Ident        reduce using rule 73
	L_integ        reduce using rule 73
	L_quoted       reduce using rule 73


State 91

	Item -> Ident .                                     (rule 32)
	Item -> Ident . '=' Expr                            (rule 33)

	','            reduce using rule 32
	';'            reduce using rule 32
	'='            shift, and enter state 107


State 92

	ListItem -> Item .                                  (rule 34)
	ListItem -> Item . ',' ListItem                     (rule 35)

	','            shift, and enter state 106
	';'            reduce using rule 34


State 93

	Stmt -> Type ListItem . ';'                         (rule 17)

	';'            shift, and enter state 105


State 94

	ListStmt -> Stmt ListStmt .                         (rule 14)

	'}'            reduce using rule 14


State 95

	Block -> '{' ListStmt '}' .                         (rule 12)

	'!'            reduce using rule 12
	'('            reduce using rule 12
	'-'            reduce using rule 12
	';'            reduce using rule 12
	'boolean'      reduce using rule 12
	'break'        reduce using rule 12
	'continue'     reduce using rule 12
	'else'         reduce using rule 12
	'false'        reduce using rule 12
	'for'          reduce using rule 12
	'if'           reduce using rule 12
	'int'          reduce using rule 12
	'print'        reduce using rule 12
	'printf'       reduce using rule 12
	'return'       reduce using rule 12
	'string'       reduce using rule 12
	'true'         reduce using rule 12
	'tuple'        reduce using rule 12
	'void'         reduce using rule 12
	'while'        reduce using rule 12
	'{'            reduce using rule 12
	'}'            reduce using rule 12
	L_Ident        reduce using rule 12
	L_integ        reduce using rule 12
	L_quoted       reduce using rule 12
	%eof           reduce using rule 12


State 96

	Expr6 -> Ident '(' . ListExpr ')'                   (rule 51)

	'!'            shift, and enter state 45
	'('            shift, and enter state 46
	')'            reduce using rule 67
	'-'            shift, and enter state 47
	'false'        shift, and enter state 51
	'true'         shift, and enter state 57
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 59
	L_quoted       shift, and enter state 60

	Ident          goto state 62
	Integer        goto state 32
	String         goto state 33
	Expr6          goto state 38
	Expr5          goto state 39
	Expr4          goto state 40
	Expr3          goto state 41
	Expr2          goto state 42
	Expr1          goto state 43
	Expr           goto state 103
	ListExpr       goto state 104

State 97

	Stmt -> Ident '++' . ';'                            (rule 19)

	';'            shift, and enter state 102


State 98

	Stmt -> Ident '--' . ';'                            (rule 20)

	';'            shift, and enter state 101


State 99

	Stmt -> Ident '=' . Expr ';'                        (rule 18)

	'!'            shift, and enter state 45
	'('            shift, and enter state 46
	'-'            shift, and enter state 47
	'false'        shift, and enter state 51
	'true'         shift, and enter state 57
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 59
	L_quoted       shift, and enter state 60

	Ident          goto state 62
	Integer        goto state 32
	String         goto state 33
	Expr6          goto state 38
	Expr5          goto state 39
	Expr4          goto state 40
	Expr3          goto state 41
	Expr2          goto state 42
	Expr1          goto state 43
	Expr           goto state 100

State 100

	Stmt -> Ident '=' Expr . ';'                        (rule 18)

	';'            shift, and enter state 129


State 101

	Stmt -> Ident '--' ';' .                            (rule 20)

	'!'            reduce using rule 20
	'('            reduce using rule 20
	'-'            reduce using rule 20
	';'            reduce using rule 20
	'boolean'      reduce using rule 20
	'break'        reduce using rule 20
	'continue'     reduce using rule 20
	'false'        reduce using rule 20
	'for'          reduce using rule 20
	'if'           reduce using rule 20
	'int'          reduce using rule 20
	'print'        reduce using rule 20
	'printf'       reduce using rule 20
	'return'       reduce using rule 20
	'string'       reduce using rule 20
	'true'         reduce using rule 20
	'tuple'        reduce using rule 20
	'void'         reduce using rule 20
	'while'        reduce using rule 20
	'{'            reduce using rule 20
	'}'            reduce using rule 20
	L_Ident        reduce using rule 20
	L_integ        reduce using rule 20
	L_quoted       reduce using rule 20


State 102

	Stmt -> Ident '++' ';' .                            (rule 19)

	'!'            reduce using rule 19
	'('            reduce using rule 19
	'-'            reduce using rule 19
	';'            reduce using rule 19
	'boolean'      reduce using rule 19
	'break'        reduce using rule 19
	'continue'     reduce using rule 19
	'false'        reduce using rule 19
	'for'          reduce using rule 19
	'if'           reduce using rule 19
	'int'          reduce using rule 19
	'print'        reduce using rule 19
	'printf'       reduce using rule 19
	'return'       reduce using rule 19
	'string'       reduce using rule 19
	'true'         reduce using rule 19
	'tuple'        reduce using rule 19
	'void'         reduce using rule 19
	'while'        reduce using rule 19
	'{'            reduce using rule 19
	'}'            reduce using rule 19
	L_Ident        reduce using rule 19
	L_integ        reduce using rule 19
	L_quoted       reduce using rule 19


State 103

	ListExpr -> Expr .                                  (rule 68)
	ListExpr -> Expr . ',' ListExpr                     (rule 69)

	')'            reduce using rule 68
	','            shift, and enter state 128


State 104

	Expr6 -> Ident '(' ListExpr . ')'                   (rule 51)

	')'            shift, and enter state 127


State 105

	Stmt -> Type ListItem ';' .                         (rule 17)

	'!'            reduce using rule 17
	'('            reduce using rule 17
	'-'            reduce using rule 17
	';'            reduce using rule 17
	'boolean'      reduce using rule 17
	'break'        reduce using rule 17
	'continue'     reduce using rule 17
	'false'        reduce using rule 17
	'for'          reduce using rule 17
	'if'           reduce using rule 17
	'int'          reduce using rule 17
	'print'        reduce using rule 17
	'printf'       reduce using rule 17
	'return'       reduce using rule 17
	'string'       reduce using rule 17
	'true'         reduce using rule 17
	'tuple'        reduce using rule 17
	'void'         reduce using rule 17
	'while'        reduce using rule 17
	'{'            reduce using rule 17
	'}'            reduce using rule 17
	L_Ident        reduce using rule 17
	L_integ        reduce using rule 17
	L_quoted       reduce using rule 17


State 106

	ListItem -> Item ',' . ListItem                     (rule 35)

	L_Ident        shift, and enter state 2

	Ident          goto state 91
	Item           goto state 92
	ListItem       goto state 126

State 107

	Item -> Ident '=' . Expr                            (rule 33)

	'!'            shift, and enter state 45
	'('            shift, and enter state 46
	'-'            shift, and enter state 47
	'false'        shift, and enter state 51
	'true'         shift, and enter state 57
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 59
	L_quoted       shift, and enter state 60

	Ident          goto state 62
	Integer        goto state 32
	String         goto state 33
	Expr6          goto state 38
	Expr5          goto state 39
	Expr4          goto state 40
	Expr3          goto state 41
	Expr2          goto state 42
	Expr1          goto state 43
	Expr           goto state 125

State 108

	Expr4 -> Expr4 MulOp Expr5 .                        (rule 57)

	'!'            reduce using rule 57
	'!='           reduce using rule 57
	'%'            reduce using rule 57
	'&&'           reduce using rule 57
	'('            reduce using rule 57
	')'            reduce using rule 57
	'*'            reduce using rule 57
	'+'            reduce using rule 57
	','            reduce using rule 57
	'-'            reduce using rule 57
	'/'            reduce using rule 57
	';'            reduce using rule 57
	'<'            reduce using rule 57
	'<='           reduce using rule 57
	'=='           reduce using rule 57
	'>'            reduce using rule 57
	'>='           reduce using rule 57
	'false'        reduce using rule 57
	'to'           reduce using rule 57
	'true'         reduce using rule 57
	'||'           reduce using rule 57
	L_Ident        reduce using rule 57
	L_integ        reduce using rule 57
	L_quoted       reduce using rule 57


State 109

	Expr4 -> Expr4 . MulOp Expr5                        (rule 57)
	Expr3 -> Expr3 AddOp Expr4 .                        (rule 59)

	'!'            reduce using rule 59
	'!='           reduce using rule 59
	'%'            shift, and enter state 88
	'&&'           reduce using rule 59
	'('            reduce using rule 59
	')'            reduce using rule 59
	'*'            shift, and enter state 89
	'+'            reduce using rule 59
	','            reduce using rule 59
	'-'            reduce using rule 59
	'/'            shift, and enter state 90
	';'            reduce using rule 59
	'<'            reduce using rule 59
	'<='           reduce using rule 59
	'=='           reduce using rule 59
	'>'            reduce using rule 59
	'>='           reduce using rule 59
	'false'        reduce using rule 59
	'to'           reduce using rule 59
	'true'         reduce using rule 59
	'||'           reduce using rule 59
	L_Ident        reduce using rule 59
	L_integ        reduce using rule 59
	L_quoted       reduce using rule 59

	MulOp          goto state 87

State 110

	Expr1 -> Expr2 '&&' Expr1 .                         (rule 63)

	'!'            reduce using rule 63
	'('            reduce using rule 63
	')'            reduce using rule 63
	','            reduce using rule 63
	'-'            reduce using rule 63
	';'            reduce using rule 63
	'false'        reduce using rule 63
	'to'           reduce using rule 63
	'true'         reduce using rule 63
	'||'           reduce using rule 63
	L_Ident        reduce using rule 63
	L_integ        reduce using rule 63
	L_quoted       reduce using rule 63


State 111

	Expr3 -> Expr3 . AddOp Expr4                        (rule 59)
	Expr2 -> Expr2 RelOp Expr3 .                        (rule 61)

	'!'            reduce using rule 61
	'!='           reduce using rule 61
	'&&'           reduce using rule 61
	'('            reduce using rule 61
	')'            reduce using rule 61
	'+'            shift, and enter state 85
	','            reduce using rule 61
	'-'            shift, and enter state 86
			(reduce using rule 61)

	';'            reduce using rule 61
	'<'            reduce using rule 61
	'<='           reduce using rule 61
	'=='           reduce using rule 61
	'>'            reduce using rule 61
	'>='           reduce using rule 61
	'false'        reduce using rule 61
	'to'           reduce using rule 61
	'true'         reduce using rule 61
	'||'           reduce using rule 61
	L_Ident        reduce using rule 61
	L_integ        reduce using rule 61
	L_quoted       reduce using rule 61

	AddOp          goto state 84

State 112

	Expr -> Expr1 '||' Expr .                           (rule 65)

	'!'            reduce using rule 65
	'('            reduce using rule 65
	')'            reduce using rule 65
	','            reduce using rule 65
	'-'            reduce using rule 65
	';'            reduce using rule 65
	'false'        reduce using rule 65
	'to'           reduce using rule 65
	'true'         reduce using rule 65
	L_Ident        reduce using rule 65
	L_integ        reduce using rule 65
	L_quoted       reduce using rule 65


State 113

	Expr6 -> '(' Expr ')' .                             (rule 53)

	'!'            reduce using rule 53
	'!='           reduce using rule 53
	'%'            reduce using rule 53
	'&&'           reduce using rule 53
	'('            reduce using rule 53
	')'            reduce using rule 53
	'*'            reduce using rule 53
	'+'            reduce using rule 53
	','            reduce using rule 53
	'-'            reduce using rule 53
	'/'            reduce using rule 53
	';'            reduce using rule 53
	'<'            reduce using rule 53
	'<='           reduce using rule 53
	'=='           reduce using rule 53
	'>'            reduce using rule 53
	'>='           reduce using rule 53
	'false'        reduce using rule 53
	'to'           reduce using rule 53
	'true'         reduce using rule 53
	'||'           reduce using rule 53
	L_Ident        reduce using rule 53
	L_integ        reduce using rule 53
	L_quoted       reduce using rule 53


State 114

	Stmt -> 'for' '(' Ident . ':=' Expr 'to' Expr ')' Block    (rule 26)

	':='           shift, and enter state 124


State 115

	Stmt -> 'if' '(' Expr . ')' Block                   (rule 23)
	Stmt -> 'if' '(' Expr . ')' Block 'else' Block      (rule 24)

	')'            shift, and enter state 123


State 116

	Stmt -> 'print' '(' Expr . ')'                      (rule 30)

	')'            shift, and enter state 122


State 117

	Stmt -> 'printf' '(' Expr . Expr Expr String ')'    (rule 31)

	'!'            shift, and enter state 45
	'('            shift, and enter state 46
	'-'            shift, and enter state 47
	'false'        shift, and enter state 51
	'true'         shift, and enter state 57
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 59
	L_quoted       shift, and enter state 60

	Ident          goto state 62
	Integer        goto state 32
	String         goto state 33
	Expr6          goto state 38
	Expr5          goto state 39
	Expr4          goto state 40
	Expr3          goto state 41
	Expr2          goto state 42
	Expr1          goto state 43
	Expr           goto state 121

State 118

	Stmt -> 'return' Expr ';' .                         (rule 21)

	'!'            reduce using rule 21
	'('            reduce using rule 21
	'-'            reduce using rule 21
	';'            reduce using rule 21
	'boolean'      reduce using rule 21
	'break'        reduce using rule 21
	'continue'     reduce using rule 21
	'false'        reduce using rule 21
	'for'          reduce using rule 21
	'if'           reduce using rule 21
	'int'          reduce using rule 21
	'print'        reduce using rule 21
	'printf'       reduce using rule 21
	'return'       reduce using rule 21
	'string'       reduce using rule 21
	'true'         reduce using rule 21
	'tuple'        reduce using rule 21
	'void'         reduce using rule 21
	'while'        reduce using rule 21
	'{'            reduce using rule 21
	'}'            reduce using rule 21
	L_Ident        reduce using rule 21
	L_integ        reduce using rule 21
	L_quoted       reduce using rule 21


State 119

	Stmt -> 'while' '(' Expr . ')' Block                (rule 25)

	')'            shift, and enter state 120


State 120

	Stmt -> 'while' '(' Expr ')' . Block                (rule 25)

	'{'            shift, and enter state 30

	Block          goto state 134

State 121

	Stmt -> 'printf' '(' Expr Expr . Expr String ')'    (rule 31)

	'!'            shift, and enter state 45
	'('            shift, and enter state 46
	'-'            shift, and enter state 47
	'false'        shift, and enter state 51
	'true'         shift, and enter state 57
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 59
	L_quoted       shift, and enter state 60

	Ident          goto state 62
	Integer        goto state 32
	String         goto state 33
	Expr6          goto state 38
	Expr5          goto state 39
	Expr4          goto state 40
	Expr3          goto state 41
	Expr2          goto state 42
	Expr1          goto state 43
	Expr           goto state 133

State 122

	Stmt -> 'print' '(' Expr ')' .                      (rule 30)

	'!'            reduce using rule 30
	'('            reduce using rule 30
	'-'            reduce using rule 30
	';'            reduce using rule 30
	'boolean'      reduce using rule 30
	'break'        reduce using rule 30
	'continue'     reduce using rule 30
	'false'        reduce using rule 30
	'for'          reduce using rule 30
	'if'           reduce using rule 30
	'int'          reduce using rule 30
	'print'        reduce using rule 30
	'printf'       reduce using rule 30
	'return'       reduce using rule 30
	'string'       reduce using rule 30
	'true'         reduce using rule 30
	'tuple'        reduce using rule 30
	'void'         reduce using rule 30
	'while'        reduce using rule 30
	'{'            reduce using rule 30
	'}'            reduce using rule 30
	L_Ident        reduce using rule 30
	L_integ        reduce using rule 30
	L_quoted       reduce using rule 30


State 123

	Stmt -> 'if' '(' Expr ')' . Block                   (rule 23)
	Stmt -> 'if' '(' Expr ')' . Block 'else' Block      (rule 24)

	'{'            shift, and enter state 30

	Block          goto state 132

State 124

	Stmt -> 'for' '(' Ident ':=' . Expr 'to' Expr ')' Block    (rule 26)

	'!'            shift, and enter state 45
	'('            shift, and enter state 46
	'-'            shift, and enter state 47
	'false'        shift, and enter state 51
	'true'         shift, and enter state 57
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 59
	L_quoted       shift, and enter state 60

	Ident          goto state 62
	Integer        goto state 32
	String         goto state 33
	Expr6          goto state 38
	Expr5          goto state 39
	Expr4          goto state 40
	Expr3          goto state 41
	Expr2          goto state 42
	Expr1          goto state 43
	Expr           goto state 131

State 125

	Item -> Ident '=' Expr .                            (rule 33)

	','            reduce using rule 33
	';'            reduce using rule 33


State 126

	ListItem -> Item ',' ListItem .                     (rule 35)

	';'            reduce using rule 35


State 127

	Expr6 -> Ident '(' ListExpr ')' .                   (rule 51)

	'!'            reduce using rule 51
	'!='           reduce using rule 51
	'%'            reduce using rule 51
	'&&'           reduce using rule 51
	'('            reduce using rule 51
	')'            reduce using rule 51
	'*'            reduce using rule 51
	'+'            reduce using rule 51
	','            reduce using rule 51
	'-'            reduce using rule 51
	'/'            reduce using rule 51
	';'            reduce using rule 51
	'<'            reduce using rule 51
	'<='           reduce using rule 51
	'=='           reduce using rule 51
	'>'            reduce using rule 51
	'>='           reduce using rule 51
	'false'        reduce using rule 51
	'to'           reduce using rule 51
	'true'         reduce using rule 51
	'||'           reduce using rule 51
	L_Ident        reduce using rule 51
	L_integ        reduce using rule 51
	L_quoted       reduce using rule 51


State 128

	ListExpr -> Expr ',' . ListExpr                     (rule 69)

	'!'            shift, and enter state 45
	'('            shift, and enter state 46
	')'            reduce using rule 67
	'-'            shift, and enter state 47
	'false'        shift, and enter state 51
	'true'         shift, and enter state 57
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 59
	L_quoted       shift, and enter state 60

	Ident          goto state 62
	Integer        goto state 32
	String         goto state 33
	Expr6          goto state 38
	Expr5          goto state 39
	Expr4          goto state 40
	Expr3          goto state 41
	Expr2          goto state 42
	Expr1          goto state 43
	Expr           goto state 103
	ListExpr       goto state 130

State 129

	Stmt -> Ident '=' Expr ';' .                        (rule 18)

	'!'            reduce using rule 18
	'('            reduce using rule 18
	'-'            reduce using rule 18
	';'            reduce using rule 18
	'boolean'      reduce using rule 18
	'break'        reduce using rule 18
	'continue'     reduce using rule 18
	'false'        reduce using rule 18
	'for'          reduce using rule 18
	'if'           reduce using rule 18
	'int'          reduce using rule 18
	'print'        reduce using rule 18
	'printf'       reduce using rule 18
	'return'       reduce using rule 18
	'string'       reduce using rule 18
	'true'         reduce using rule 18
	'tuple'        reduce using rule 18
	'void'         reduce using rule 18
	'while'        reduce using rule 18
	'{'            reduce using rule 18
	'}'            reduce using rule 18
	L_Ident        reduce using rule 18
	L_integ        reduce using rule 18
	L_quoted       reduce using rule 18


State 130

	ListExpr -> Expr ',' ListExpr .                     (rule 69)

	')'            reduce using rule 69


State 131

	Stmt -> 'for' '(' Ident ':=' Expr . 'to' Expr ')' Block    (rule 26)

	'to'           shift, and enter state 137


State 132

	Stmt -> 'if' '(' Expr ')' Block .                   (rule 23)
	Stmt -> 'if' '(' Expr ')' Block . 'else' Block      (rule 24)

	'!'            reduce using rule 23
	'('            reduce using rule 23
	'-'            reduce using rule 23
	';'            reduce using rule 23
	'boolean'      reduce using rule 23
	'break'        reduce using rule 23
	'continue'     reduce using rule 23
	'else'         shift, and enter state 136
	'false'        reduce using rule 23
	'for'          reduce using rule 23
	'if'           reduce using rule 23
	'int'          reduce using rule 23
	'print'        reduce using rule 23
	'printf'       reduce using rule 23
	'return'       reduce using rule 23
	'string'       reduce using rule 23
	'true'         reduce using rule 23
	'tuple'        reduce using rule 23
	'void'         reduce using rule 23
	'while'        reduce using rule 23
	'{'            reduce using rule 23
	'}'            reduce using rule 23
	L_Ident        reduce using rule 23
	L_integ        reduce using rule 23
	L_quoted       reduce using rule 23


State 133

	Stmt -> 'printf' '(' Expr Expr Expr . String ')'    (rule 31)

	L_quoted       shift, and enter state 60

	String         goto state 135

State 134

	Stmt -> 'while' '(' Expr ')' Block .                (rule 25)

	'!'            reduce using rule 25
	'('            reduce using rule 25
	'-'            reduce using rule 25
	';'            reduce using rule 25
	'boolean'      reduce using rule 25
	'break'        reduce using rule 25
	'continue'     reduce using rule 25
	'false'        reduce using rule 25
	'for'          reduce using rule 25
	'if'           reduce using rule 25
	'int'          reduce using rule 25
	'print'        reduce using rule 25
	'printf'       reduce using rule 25
	'return'       reduce using rule 25
	'string'       reduce using rule 25
	'true'         reduce using rule 25
	'tuple'        reduce using rule 25
	'void'         reduce using rule 25
	'while'        reduce using rule 25
	'{'            reduce using rule 25
	'}'            reduce using rule 25
	L_Ident        reduce using rule 25
	L_integ        reduce using rule 25
	L_quoted       reduce using rule 25


State 135

	Stmt -> 'printf' '(' Expr Expr Expr String . ')'    (rule 31)

	')'            shift, and enter state 140


State 136

	Stmt -> 'if' '(' Expr ')' Block 'else' . Block      (rule 24)

	'{'            shift, and enter state 30

	Block          goto state 139

State 137

	Stmt -> 'for' '(' Ident ':=' Expr 'to' . Expr ')' Block    (rule 26)

	'!'            shift, and enter state 45
	'('            shift, and enter state 46
	'-'            shift, and enter state 47
	'false'        shift, and enter state 51
	'true'         shift, and enter state 57
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 59
	L_quoted       shift, and enter state 60

	Ident          goto state 62
	Integer        goto state 32
	String         goto state 33
	Expr6          goto state 38
	Expr5          goto state 39
	Expr4          goto state 40
	Expr3          goto state 41
	Expr2          goto state 42
	Expr1          goto state 43
	Expr           goto state 138

State 138

	Stmt -> 'for' '(' Ident ':=' Expr 'to' Expr . ')' Block    (rule 26)

	')'            shift, and enter state 141


State 139

	Stmt -> 'if' '(' Expr ')' Block 'else' Block .      (rule 24)

	'!'            reduce using rule 24
	'('            reduce using rule 24
	'-'            reduce using rule 24
	';'            reduce using rule 24
	'boolean'      reduce using rule 24
	'break'        reduce using rule 24
	'continue'     reduce using rule 24
	'false'        reduce using rule 24
	'for'          reduce using rule 24
	'if'           reduce using rule 24
	'int'          reduce using rule 24
	'print'        reduce using rule 24
	'printf'       reduce using rule 24
	'return'       reduce using rule 24
	'string'       reduce using rule 24
	'true'         reduce using rule 24
	'tuple'        reduce using rule 24
	'void'         reduce using rule 24
	'while'        reduce using rule 24
	'{'            reduce using rule 24
	'}'            reduce using rule 24
	L_Ident        reduce using rule 24
	L_integ        reduce using rule 24
	L_quoted       reduce using rule 24


State 140

	Stmt -> 'printf' '(' Expr Expr Expr String ')' .    (rule 31)

	'!'            reduce using rule 31
	'('            reduce using rule 31
	'-'            reduce using rule 31
	';'            reduce using rule 31
	'boolean'      reduce using rule 31
	'break'        reduce using rule 31
	'continue'     reduce using rule 31
	'false'        reduce using rule 31
	'for'          reduce using rule 31
	'if'           reduce using rule 31
	'int'          reduce using rule 31
	'print'        reduce using rule 31
	'printf'       reduce using rule 31
	'return'       reduce using rule 31
	'string'       reduce using rule 31
	'true'         reduce using rule 31
	'tuple'        reduce using rule 31
	'void'         reduce using rule 31
	'while'        reduce using rule 31
	'{'            reduce using rule 31
	'}'            reduce using rule 31
	L_Ident        reduce using rule 31
	L_integ        reduce using rule 31
	L_quoted       reduce using rule 31


State 141

	Stmt -> 'for' '(' Ident ':=' Expr 'to' Expr ')' . Block    (rule 26)

	'{'            shift, and enter state 30

	Block          goto state 142

State 142

	Stmt -> 'for' '(' Ident ':=' Expr 'to' Expr ')' Block .    (rule 26)

	'!'            reduce using rule 26
	'('            reduce using rule 26
	'-'            reduce using rule 26
	';'            reduce using rule 26
	'boolean'      reduce using rule 26
	'break'        reduce using rule 26
	'continue'     reduce using rule 26
	'false'        reduce using rule 26
	'for'          reduce using rule 26
	'if'           reduce using rule 26
	'int'          reduce using rule 26
	'print'        reduce using rule 26
	'printf'       reduce using rule 26
	'return'       reduce using rule 26
	'string'       reduce using rule 26
	'true'         reduce using rule 26
	'tuple'        reduce using rule 26
	'void'         reduce using rule 26
	'while'        reduce using rule 26
	'{'            reduce using rule 26
	'}'            reduce using rule 26
	L_Ident        reduce using rule 26
	L_integ        reduce using rule 26
	L_quoted       reduce using rule 26


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 81
Number of terminals: 47
Number of non-terminals: 28
Number of states: 143
